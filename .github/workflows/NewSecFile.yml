name: Comprehensive Model Security Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  scan-model-files:
    name: Scan Model Files for Malware & Unsafe Serialization
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install scanner tools
          run:|
            sudo apt-get update
            sudo apt-get install -y clamav
            sudo freshclam --stdout
            pip install fickling
      - name: Find model files
        run: |
          find . \( -name "*.pkl" -o -name "*.pt" -o -name "*.pth" -o -name "*.h5" -o -name "*.ckpt" -o -name "*.pb" -o -name "*.onnx" -o -name "*.safetensors" -o -name "*.joblib" \) > model_files.txt
      - name: Scan for malware
        run: |
          clamscan --infected --recursive --log=clamscan.log $(cat model_files.txt) || exit 1
      - name: Check pickle files
        run: |
          for file in $(grep -E "\.(pkl|pt|pth|joblib)$" model_files.txt); do
            fickling --check-safety "$file" || exit 1
          done
      - name: Upload scan logs
        uses: actions/upload-artifact@v4
        with:
          name: scan-logs
          path: clamscan.log

  dependency-audit:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install pip-audit
        run: pip install pip-audit
      - name: Run pip-audit
        run: |
          if [ -f requirements.txt ]; then
            pip-audit --requirement requirements.txt --output pip-audit-results.txt || exit 1
          else
            echo "No requirements.txt found, skipping pip-audit."
          fi
      - name: Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-results
          path: pip-audit-results.txt
        if: success() || failure()

  static-analysis:
    name: Static Code Security Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Bandit
        run: pip install bandit
      - name: Run Bandit
        run: bandit -r . -f txt -o bandit-report.txt || exit 1
      - name: Upload Bandit report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.txt

  secret-scan:
    name: Secret Detection
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml 
